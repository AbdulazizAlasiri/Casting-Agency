{
	"info": {
		"_postman_id": "4d5caa9f-a6a7-4cf9-8ffa-205f6283ed6c",
		"name": "Casting-Agency",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "setup",
			"item": [
				{
					"name": "Testing if the Server Works!",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5bc08289-c388-4cca-8e94-8cf57de589e7",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/",
							"host": [
								"{{host}}"
							],
							"path": [
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "setup database",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3b58b8c6-38b2-4375-b303-4058e68c50ae",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/setup-database",
							"host": [
								"{{host}}"
							],
							"path": [
								"setup-database"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Casting Assistant",
			"item": [
				{
					"name": "actors",
					"item": [
						{
							"name": "{{host}}/actors",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a4352442-7e7a-4921-aff3-2f03daacef48",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"value contains actors array\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.actors).to.be.an('array')",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/actors",
									"host": [
										"{{host}}"
									],
									"path": [
										"actors"
									]
								}
							},
							"response": []
						},
						{
							"name": "{{host}}/actors",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "33f76abc-31f6-4658-a8eb-8c4774b253b2",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(401);",
											"});",
											"",
											"pm.test(\"Response is correct\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.message).to.eql(\"unauthorized\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"Added Actor\",\n\t\"birth_year\": 100,\n\t\"gender\": \"m\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/actors",
									"host": [
										"{{host}}"
									],
									"path": [
										"actors"
									]
								}
							},
							"response": []
						},
						{
							"name": "{{host}}/actors/<actor_id>",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "022ab42b-1763-4421-a28d-9651e90a2a09",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(401);",
											"});",
											"",
											"pm.test(\"Response is correct\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.message).to.eql(\"unauthorized\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"edited actor\",\n\t\"birth_year\": 200,\n\t\"gender\": \"f\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/actors/4",
									"host": [
										"{{host}}"
									],
									"path": [
										"actors",
										"4"
									]
								}
							},
							"response": []
						},
						{
							"name": "{{host}}/actors/<actor_id>",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "53b35ad0-fc76-4716-8f93-62ad8e358ed9",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(401);",
											"});",
											"",
											"pm.test(\"Response is correct\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.message).to.eql(\"unauthorized\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{host}}/actors/4",
									"host": [
										"{{host}}"
									],
									"path": [
										"actors",
										"4"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "movies",
					"item": [
						{
							"name": "{{host}}/movies",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "78ec9330-6ad8-4852-9264-91a939d0a0e0",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"value contains movies array\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.movies).to.be.an('array')",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/movies",
									"host": [
										"{{host}}"
									],
									"path": [
										"movies"
									]
								}
							},
							"response": []
						},
						{
							"name": "{{host}}/movies",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ce33670c-73d1-42f2-a022-2ec2bcce446d",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(401);",
											"});",
											"",
											"pm.test(\"Response is correct\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.message).to.eql(\"unauthorized\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"title\": \"added movie\",\n\t\"release_date\": \"2000-01-20\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/movies",
									"host": [
										"{{host}}"
									],
									"path": [
										"movies"
									]
								}
							},
							"response": []
						},
						{
							"name": "{{host}}/movies/<movie_id>",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4582cfd2-b2ed-4463-a7d3-460b8f055dea",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(401);",
											"});",
											"",
											"pm.test(\"Response is correct\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.message).to.eql(\"unauthorized\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"title\": \"edited movie\",\n\t\"release_date\": \"3000-02-01\"\n\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/movies/4",
									"host": [
										"{{host}}"
									],
									"path": [
										"movies",
										"4"
									]
								}
							},
							"response": []
						},
						{
							"name": "{{host}}/movies/<movie_id>",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4257dddc-8d0f-4608-adc0-9db8213e2f5f",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(401);",
											"});",
											"",
											"pm.test(\"Response is correct\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.message).to.eql(\"unauthorized\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{host}}/movies/4",
									"host": [
										"{{host}}"
									],
									"path": [
										"movies",
										"4"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6Ilk2QkJaZUtXUVdYMklSY2xudy1xUyJ9.eyJpc3MiOiJodHRwczovL2FiZHVsYXppei5hdXRoMC5jb20vIiwic3ViIjoiMkJFS29hVzlKY0lsNllxbDFWZ0ZYNm52V3JtcDk0Q1FAY2xpZW50cyIsImF1ZCI6ImNhc3RpbmctYWdlbmN5IiwiaWF0IjoxNTkyNTk4NTA3LCJleHAiOjE1OTM0NjI1MDcsImF6cCI6IjJCRUtvYVc5SmNJbDZZcWwxVmdGWDZudldybXA5NENRIiwic2NvcGUiOiJnZXQ6YWN0b3JzIGdldDptb3ZpZXMiLCJndHkiOiJjbGllbnQtY3JlZGVudGlhbHMiLCJwZXJtaXNzaW9ucyI6WyJnZXQ6YWN0b3JzIiwiZ2V0Om1vdmllcyJdfQ.SBo9QDGNA8OqoHDE-mEB90MfZyLlfp6X3lWh3bysTzD5lZ3GgXL45GJ8ZM2nS8h0dPiOFNbxhkzNWoXNzAAFP2t9ea9RiumyYj5a_YzALQNPU94enAgLxjfNSS8PxOGG9nO6xVmRcOIZ8C3dTUIpQk7tpGgl-l4pBAYknHMia2iMk3mCeEUZYmDYAGVaaemWUVPgezgfhusmF-mJSCVks0ZnhdTPrLUCN9Rw7rcs9vOq8pdFQmSWxXdMvwp-N_tzrXKTjThYgX9MEKi5MaCecHb47hFN45UhBdexmXUBf_GqPK7giDE7NskI6RVM93uJk98oQh7xgdrMkvHPEqWReg",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "d7371d2c-6b7b-45a2-9fc7-1437eca3c324",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "9e1383b6-8309-42cc-a993-54435f8e5a91",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Casting Director",
			"item": [
				{
					"name": "actors",
					"item": [
						{
							"name": "{{host}}/actors",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "71bfc59c-a4ca-4b94-aba1-cb322cbc491d",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"value contains actors array\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.actors).to.be.an('array')",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/actors",
									"host": [
										"{{host}}"
									],
									"path": [
										"actors"
									]
								}
							},
							"response": []
						},
						{
							"name": "{{host}}/actors",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5a51fc94-bcb5-4942-bc27-387af91e66c2",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"value contains actors array\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.actors).to.be.an('array')",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"Added Actor\",\n\t\"birth_year\": 100,\n\t\"gender\": \"m\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/actors",
									"host": [
										"{{host}}"
									],
									"path": [
										"actors"
									]
								}
							},
							"response": []
						},
						{
							"name": "{{host}}/actors/<actor_id>",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0ffa0601-c0dc-472c-9eed-dbb447327282",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"value contains actors array\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.actors).to.be.an('array')",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"edited actor\",\n\t\"birth_year\": 200,\n\t\"gender\": \"f\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/actors/4",
									"host": [
										"{{host}}"
									],
									"path": [
										"actors",
										"4"
									]
								}
							},
							"response": []
						},
						{
							"name": "{{host}}/actors/<actor_id>",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "826aa63e-a44a-4364-aa03-60ccf602b9fe",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{host}}/actors/4",
									"host": [
										"{{host}}"
									],
									"path": [
										"actors",
										"4"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "movies",
					"item": [
						{
							"name": "{{host}}/movies",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "742cff4f-bca2-4043-84b3-0e7820fb7f27",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"value contains movies array\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.movies).to.be.an('array')",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/movies",
									"host": [
										"{{host}}"
									],
									"path": [
										"movies"
									]
								}
							},
							"response": []
						},
						{
							"name": "{{host}}/movies",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0b8bd1a5-6205-4c1c-a629-75085e42882e",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(401);",
											"});",
											"",
											"pm.test(\"Response is correct\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.message).to.eql(\"unauthorized\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"title\": \"added movie\",\n\t\"release_date\": \"2000-01-20\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/movies",
									"host": [
										"{{host}}"
									],
									"path": [
										"movies"
									]
								}
							},
							"response": []
						},
						{
							"name": "{{host}}/movies/<movie_id>",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a2c96079-1df2-4ec9-a5e0-4ab625a5d5db",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"value contains movies array\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.movies).to.be.an('array')",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"title\": \"edited movie\",\n\t\"release_date\": \"3000-02-01\"\n\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/movies/3",
									"host": [
										"{{host}}"
									],
									"path": [
										"movies",
										"3"
									]
								}
							},
							"response": []
						},
						{
							"name": "{{host}}/movies/<movie_id>",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2b865208-44aa-4576-9218-41e0ab7053a7",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(401);",
											"});",
											"",
											"pm.test(\"Response is correct\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.message).to.eql(\"unauthorized\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{host}}/movies/3",
									"host": [
										"{{host}}"
									],
									"path": [
										"movies",
										"3"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6Ilk2QkJaZUtXUVdYMklSY2xudy1xUyJ9.eyJpc3MiOiJodHRwczovL2FiZHVsYXppei5hdXRoMC5jb20vIiwic3ViIjoiMkJFS29hVzlKY0lsNllxbDFWZ0ZYNm52V3JtcDk0Q1FAY2xpZW50cyIsImF1ZCI6ImNhc3RpbmctYWdlbmN5IiwiaWF0IjoxNTkyNTk4NDEwLCJleHAiOjE1OTM0NjI0MTAsImF6cCI6IjJCRUtvYVc5SmNJbDZZcWwxVmdGWDZudldybXA5NENRIiwic2NvcGUiOiJnZXQ6YWN0b3JzIGdldDptb3ZpZXMgcG9zdDphY3RvcnMgZGVsZXRlOmFjdG9ycyBwYXRjaDphY3RvcnMgcGF0Y2g6bW92aWVzIGFzc2lnbjphY3RvcnMgcmVtb3ZlOmFjdG9ycyIsImd0eSI6ImNsaWVudC1jcmVkZW50aWFscyIsInBlcm1pc3Npb25zIjpbImdldDphY3RvcnMiLCJnZXQ6bW92aWVzIiwicG9zdDphY3RvcnMiLCJkZWxldGU6YWN0b3JzIiwicGF0Y2g6YWN0b3JzIiwicGF0Y2g6bW92aWVzIiwiYXNzaWduOmFjdG9ycyIsInJlbW92ZTphY3RvcnMiXX0.FWHjuWlijAyTUDJk_S7sJv4NBbGgQbD_QPva-TsctcZmAOngusZRU09YaHMKiVj6GPh66Y7NqkEkBxZo3YHyNlA6-eX5eWP5vKcaXyJwXVc15dqpqx9hnbFA24rVOcCtTms-gCjwwVoNEdWCso2unPCKbpLP2JkB5HqXCtDO0ZW9krIxdz-JxI0R0mI4yKcTJgL65-jBek_ckpZ4vvQB5EWFU-ZbJDWqN-m1vKjq7lguvVhu1ZL5E5LYWHvPdG0jXypLlaNGKf2FZyw_l4yXwy-Ia53t8j6VKdpyyW9dI0TEydK5UaJ_3IIjg3gGs2qxtaAi9kY3SPrMFe8r1BxgaA",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "ddef1a39-7a5b-45ae-bfbe-e652c06fe2fb",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "6a0a3e77-69f5-4200-9bef-b6bcd7336eb8",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Executive Producer",
			"item": [
				{
					"name": "actors",
					"item": [
						{
							"name": "{{host}}/actors",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e5f535a1-2f33-4c60-9447-3437ee1a07b2",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"value contains actors array\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.actors).to.be.an('array')",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/actors",
									"host": [
										"{{host}}"
									],
									"path": [
										"actors"
									]
								}
							},
							"response": []
						},
						{
							"name": "{{host}}/actors",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d4e34c25-5c23-4380-bb3f-48e378155844",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"value contains actors array\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.actors).to.be.an('array')",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"Added Actor\",\n\t\"birth_year\": 100,\n\t\"gender\": \"m\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/actors",
									"host": [
										"{{host}}"
									],
									"path": [
										"actors"
									]
								}
							},
							"response": []
						},
						{
							"name": "{{host}}/actors/<actor_id>",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "09e2273d-6982-40f7-8962-031dcb26837d",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"value contains actors array\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.actors).to.be.an('array')",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"edited actor\",\n\t\"birth_year\": 200,\n\t\"gender\": \"f\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/actors/5",
									"host": [
										"{{host}}"
									],
									"path": [
										"actors",
										"5"
									]
								}
							},
							"response": []
						},
						{
							"name": "{{host}}/actors/<actor_id>",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bf20c2fa-6c26-497a-b27d-2a8988df976b",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{host}}/actors/5",
									"host": [
										"{{host}}"
									],
									"path": [
										"actors",
										"5"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "movies",
					"item": [
						{
							"name": "{{host}}/movies",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "771d9801-b1a1-4dc8-a5b6-7df373e0320c",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"value contains movies array\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.movies).to.be.an('array')",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/movies",
									"host": [
										"{{host}}"
									],
									"path": [
										"movies"
									]
								}
							},
							"response": []
						},
						{
							"name": "{{host}}/movies",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b6f8cfbf-d7d4-46c8-b8af-6afdb7c5c548",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"title\": \"added movie\",\n\t\"release_date\": \"2000-01-20\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/movies",
									"host": [
										"{{host}}"
									],
									"path": [
										"movies"
									]
								}
							},
							"response": []
						},
						{
							"name": "{{host}}/movies/<movie_id>",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6fc1c466-abc6-40c3-9a5b-bece62de90d3",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"value contains movies array\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.movies).to.be.an('array')",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"title\": \"edited movie\",\n\t\"release_date\": \"3000-02-01\"\n\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/movies/4",
									"host": [
										"{{host}}"
									],
									"path": [
										"movies",
										"4"
									]
								}
							},
							"response": []
						},
						{
							"name": "{{host}}/movies/<movie_id>",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b9237bea-1dd5-47d6-92c9-063aa65d5d37",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{host}}/movies/4",
									"host": [
										"{{host}}"
									],
									"path": [
										"movies",
										"4"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "movie_actors",
					"item": [
						{
							"name": "/movies/<int:movie_id>/actors",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "00732da6-235b-4733-9627-0430b9dd2ae8",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"value contains actors array\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.actors).to.be.an('array')",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}//movies/3/actors",
									"host": [
										"{{host}}"
									],
									"path": [
										"",
										"movies",
										"3",
										"actors"
									]
								}
							},
							"response": []
						},
						{
							"name": "/movies/<int:movie_id>/actors",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0362876b-e9cd-4332-87be-2f7c8a3e503b",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"value contains actors array\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.actors).to.be.an('array')",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"content-type": true
								}
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"actor_id\": \"1\"\r\n}"
								},
								"url": {
									"raw": "{{host}}//movies/3/actors",
									"host": [
										"{{host}}"
									],
									"path": [
										"",
										"movies",
										"3",
										"actors"
									]
								}
							},
							"response": []
						},
						{
							"name": "/movies/<int:movie_id>/actors",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c454137a-609b-45ed-8866-abba43e2532c",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"value contains actors array\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.actors).to.be.an('array')",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"content-type": true
								}
							},
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"actor_id\": \"1\"\r\n}"
								},
								"url": {
									"raw": "{{host}}//movies/3/actors",
									"host": [
										"{{host}}"
									],
									"path": [
										"",
										"movies",
										"3",
										"actors"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6Ilk2QkJaZUtXUVdYMklSY2xudy1xUyJ9.eyJpc3MiOiJodHRwczovL2FiZHVsYXppei5hdXRoMC5jb20vIiwic3ViIjoiMkJFS29hVzlKY0lsNllxbDFWZ0ZYNm52V3JtcDk0Q1FAY2xpZW50cyIsImF1ZCI6ImNhc3RpbmctYWdlbmN5IiwiaWF0IjoxNTkyNTk4MzI3LCJleHAiOjE1OTM0NjIzMjcsImF6cCI6IjJCRUtvYVc5SmNJbDZZcWwxVmdGWDZudldybXA5NENRIiwic2NvcGUiOiJnZXQ6YWN0b3JzIGdldDptb3ZpZXMgcG9zdDphY3RvcnMgcG9zdDptb3ZpZXMgZGVsZXRlOmFjdG9ycyBkZWxldGU6bW92aWVzIHBhdGNoOmFjdG9ycyBwYXRjaDptb3ZpZXMgYXNzaWduOmFjdG9ycyByZW1vdmU6YWN0b3JzIiwiZ3R5IjoiY2xpZW50LWNyZWRlbnRpYWxzIiwicGVybWlzc2lvbnMiOlsiZ2V0OmFjdG9ycyIsImdldDptb3ZpZXMiLCJwb3N0OmFjdG9ycyIsInBvc3Q6bW92aWVzIiwiZGVsZXRlOmFjdG9ycyIsImRlbGV0ZTptb3ZpZXMiLCJwYXRjaDphY3RvcnMiLCJwYXRjaDptb3ZpZXMiLCJhc3NpZ246YWN0b3JzIiwicmVtb3ZlOmFjdG9ycyJdfQ.E1vnj_zWoMLEHgbLx3bJFP7LgzB7kLnvH__FZ-LcFAIsoMLgoWVmZnw3QRVl6nQreiqHFk5TaWGSuzAfpmFtFtz7WliSL7yXTzT1T1_SNurbTyPVJLG1TU4VV-8oUcUr5j-0g8VkVklJqDtsGbLrZIteAU9preg4qMuJGkM2v3MahKcpyklVLmO3agKhgo2-P-LtHXASe4OzxpVCd1NZ4ARY7pxPYMwC5KbCIuP4lnMuUMT0fFi0ANXcnIzbwaTM7uq9VOvSik8CY62d4XXL5fGLxljjcway9kP0JsG3xjw4Z8PeWhucnkGVF52rSfDPpkhVRIGTLyxQbQcK8XXy2g",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "4073b046-467a-48e3-865a-cf95c81374a5",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "e592ee0a-9154-4973-b412-0c7bd6ac0fc6",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "76cd528b-8bcd-4d7b-91f6-bb397c737d33",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "557b647f-f402-419c-ab9e-0ffb92ced095",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "a1d983c5-28ff-4b54-9366-ffa9a3b47c5b",
			"value": "",
			"type": "string",
			"disabled": true
		},
		{
			"id": "98e42c1a-b434-442a-8944-530033b31707",
			"key": "host",
			"value": "https://casting-agency-fsnd-project.herokuapp.com/",
			"type": "string"
		},
		{
			"id": "bb46204b-6374-4555-9faf-d0cc11725953",
			"key": "host",
			"value": "http://127.0.0.1:5000/",
			"type": "string",
			"disabled": true
		}
	],
	"protocolProfileBehavior": {}
}